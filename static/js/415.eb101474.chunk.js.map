{"version":3,"file":"static/js/415.eb101474.chunk.js","mappings":"6KACMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uFC2Bf,UA1Ba,WACX,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,GAAU,uBAAuBa,MAAK,SAAAT,GAAQ,OAC5CK,EAASL,EAASU,KAAKC,QADqB,GAG/C,GAAE,KAED,+BAEE,wBACGP,EAAMQ,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMX,GAA/C,UACE,uBAAIO,EAAKK,WAFJL,EAAKE,GAMjB,OAIR,C","sources":["API/getMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport getMovies from 'API/getMovies';\nimport { useState } from 'react';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    getMovies('trending/movie/week').then(response =>\n      setFilms(response.data.results)\n    );\n  }, []);\n  return (\n    <>\n      {/* <Link to=\"/movies/:movieId\" state={{ from: location }} /> */}\n      <ul>\n        {films.map(film => {\n          return (\n            <li key={film.id}>\n              <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                <p>{film.title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","useState","films","setFilms","location","useLocation","useEffect","then","data","results","map","film","to","id","state","from","title"],"sourceRoot":""}