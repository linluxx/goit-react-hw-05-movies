{"version":3,"file":"static/js/544.65e6d435.chunk.js","mappings":"kLAEMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,gGCFTO,EAAOC,EAAAA,EAAAA,GAAH,wGAMJC,EAAOD,EAAAA,EAAAA,GAAH,sBACJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6QAMC,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,KAAKC,IAAjB,IAEP,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,UAAlB,IACI,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAZ,IAIJ,SAAAN,GAAC,OAAIA,EAAEC,MAAMG,MAAMG,MAAlB,IAGRC,EAAQZ,EAAAA,EAAAA,IAAH,qG,SCFX,EApBkB,SAAC,GAA0B,IAAxBa,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,SAACf,EAAD,UACGc,EAAOE,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACxB,OACE,SAACjB,EAAD,WACE,UAACC,EAAD,CAAYiB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,WACE,SAACF,EAAD,CACEU,IAAG,yCAAoCJ,GACvCK,IAAKP,IAENA,MANMC,EAUd,KAGN,C,4FCDD,UAfa,WACX,OAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMZ,GAAWa,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,YACRpC,EAAAA,EAAAA,GAAU,uBAAuBqC,MAAK,SAAAjC,GACpC8B,EAAS9B,EAASkC,KAAKC,QACxB,GACF,GAAE,KAED,2BACE,SAAC,IAAD,CAAWlB,OAAQY,EAAOX,SAAUA,KAGzC,C","sources":["API/getMovies.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\nconst Item = styled.li``;\nconst StyledLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  font-family: ${p => p.theme.font.main};\n  font-weight: 600;\n  color: ${p => p.theme.color.secondText};\n  transition: ${p => p.theme.transition};\n\n  :hover {\n    scale: 1.05;\n    color: ${p => p.theme.color.accent};\n  }\n`;\nconst Image = styled.img`\n  display: block;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 5px;\n`;\n\nexport { List, Image, Item, StyledLink };\n","import PropTypes from 'prop-types';\n\nimport { List, Image, Item, StyledLink } from './MovieList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ title, id, poster_path }) => {\n        return (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title}\n              />\n              {title}\n            </StyledLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n    })\n  ),\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    key: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.string,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport getMovies from 'API/getMovies';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    getMovies('trending/movie/week').then(response => {\n      setFilms(response.data.results);\n    });\n  }, []);\n  return (\n    <main>\n      <MovieList movies={films} location={location} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","List","styled","Item","StyledLink","NavLink","p","theme","font","main","color","secondText","transition","accent","Image","movies","location","map","title","id","poster_path","to","state","from","src","alt","useState","films","setFilms","useLocation","useEffect","then","data","results"],"sourceRoot":""}