{"version":3,"file":"static/js/387.bd52ba72.chunk.js","mappings":"kLAEMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,4ICHTO,EAAOC,EAAAA,EAAAA,GAAH,4EAKJC,EAAOD,EAAAA,EAAAA,GAAH,yIAIO,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,KAAKC,IAAjB,IAGZC,EAAMN,EAAAA,EAAAA,IAAH,iMAUHO,EAAQP,EAAAA,EAAAA,EAAH,6CAGLQ,EAAOR,EAAAA,EAAAA,KAAH,6C,SCaV,EAjCa,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,GAAU,UAAD,OAAWoB,EAAX,aAA8BG,MAAK,SAAAC,GAC1CL,EAAUK,EAAIC,KAAKC,KACpB,GACF,GAAE,CAACN,KAGF,SAACb,EAAD,UACGW,GACCA,EAAOS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC3C,OACE,UAACtB,EAAD,YACE,SAACK,EAAD,CACEkB,IAAG,yCAAoCJ,GACvCK,IAAKJ,KAEP,UAACd,EAAD,qBACQ,SAACC,EAAD,UAAOa,QAEf,UAACd,EAAD,0BACa,SAACC,EAAD,UAAOc,SATXC,EAad,KAGR,C","sources":["API/getMovies.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\nconst Item = styled.li`\n  width: 170px;\n  display: flex;\n  flex-direction: column;\n  font-family: ${p => p.theme.font.main};\n  /* align-items: center; */\n`;\nconst Img = styled.img`\n  width: 170px;\n  height: 250px;\n  text-align: center;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  margin-bottom: 5px;\n`;\nconst Title = styled.p`\n  font-weight: 600;\n`;\nconst Text = styled.span`\n  font-weight: 400;\n`;\n\nexport { List, Img, Item, Text, Title };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport getMovies from 'API/getMovies';\n\nimport { List, Img, Item, Text, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovies(`/movie/${movieId}/credits`).then(res => {\n      setActors(res.data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <List>\n      {actors &&\n        actors.map(({ profile_path, name, character, id }) => {\n          return (\n            <Item key={id}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n              <Title>\n                Name: <Text>{name}</Text>\n              </Title>\n              <Title>\n                Character: <Text>{character}</Text>\n              </Title>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","List","styled","Item","p","theme","font","main","Img","Title","Text","useState","actors","setActors","movieId","useParams","useEffect","then","res","data","cast","map","profile_path","name","character","id","src","alt"],"sourceRoot":""}