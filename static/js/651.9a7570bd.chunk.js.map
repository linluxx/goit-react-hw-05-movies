{"version":3,"file":"static/js/651.9a7570bd.chunk.js","mappings":"6KACMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,sICuDf,EArDe,WACb,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,WAEtCC,EAAAA,EAAAA,YAAU,WACJF,IACFf,EAAAA,EAAAA,GAAU,gBAAD,gBAA2Be,IAAgBG,MAAK,SAAAC,GAAG,OAC1DV,EAAUU,EAAIC,KAAKC,QADuC,GAK/D,GAAE,IAiBH,OACE,iCACE,kBAAMC,SAjBa,SAAAC,GACrBA,EAAIC,iBACJ,IAAMC,EAASF,EAAIG,cAAcC,SAASC,MAAMC,MAChDf,EAAgB,CAAEW,OAAQA,KAC1BzB,EAAAA,EAAAA,GAAU,gBAAD,gBAA2ByB,IAAUP,MAAK,SAAAC,GAOjD,OANgC,IAA5BA,EAAIC,KAAKC,QAAQS,QACnBC,EAAAA,GAAAA,KAAW,0CAA2C,CACpDC,UAAW,IACXC,MAAO,SAGJxB,EAAUU,EAAIC,KAAKC,QAC3B,GACF,EAIG,WACE,kBAAOa,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBAC5C,mBAAQF,KAAK,SAAb,uBAEiB,IAAlB1B,EAAOsB,SACN,wBACGtB,EAAO6B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMhC,GAA1C,SACG4B,KAFIC,EAMZ,QAKV,C","sources":["API/getMovies.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import getMovies from 'API/getMovies';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchResult = searchParams.get('search');\n\n  useEffect(() => {\n    if (searchResult) {\n      getMovies('/search/movie', `query=${searchResult}`).then(res =>\n        setMovies(res.data.results)\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onMoviesSearch = evt => {\n    evt.preventDefault();\n    const search = evt.currentTarget.elements.query.value;\n    setSearchParams({ search: search });\n    getMovies('/search/movie', `query=${search}`).then(res => {\n      if (res.data.results.length === 0) {\n        toast.warn('Wrong search request. Please, try again', {\n          autoClose: 2000,\n          theme: 'dark',\n        });\n      }\n      return setMovies(res.data.results);\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={onMoviesSearch}>\n        <input type=\"text\" name=\"query\" placeholder=\"Search movies\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length !== 0 && (\n        <ul>\n          {movies.map(({ title, id }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","searchResult","get","useEffect","then","res","data","results","onSubmit","evt","preventDefault","search","currentTarget","elements","query","value","length","toast","autoClose","theme","type","name","placeholder","map","title","id","to","state","from"],"sourceRoot":""}