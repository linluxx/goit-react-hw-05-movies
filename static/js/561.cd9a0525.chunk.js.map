{"version":3,"file":"static/js/561.cd9a0525.chunk.js","mappings":"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","sources":["API/getMovies.jsx","components/GeneralFilmInfo/GeneralFilmInfo.styled.js","components/GeneralFilmInfo/GeneralFilmInfo.jsx","components/AdditionalFilmInfo/AdditionalFilmInfo.styled.js","components/AdditionalFilmInfo/AdditionalFilmInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\n\nconst Section = styled.section`\n  display: flex;\n  padding: 15px;\n\n  max-width: 990px;\n`;\nconst Img = styled.img`\n  height: 500px;\n  width: 400px;\n  border-radius: 10px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n\n  padding: 15px;\n  padding-top: 0;\n  font-family: ${p => p.theme.font.main};\n  color: ${p => p.theme.color.secondBg};\n`;\nconst MovieName = styled.h1`\n  color: ${p => p.theme.color.accent};\n  font-size: 45px;\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.font.marker};\n`;\nconst Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 5px;\n  font-family: ${p => p.theme.font.marker};\n  font-size: 30px;\n`;\nconst Text = styled.p`\n  font-size: 18px;\n  display: flex;\n`;\n\nconst Wrap = styled.span`\n  margin-right: 5px;\n  height: 25px;\n`;\n\nexport { Container, Img, Section, MovieName, Text, Title, Wrap };\n","import { BsTrophy } from 'react-icons/bs';\nimport { BiMoviePlay } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  MovieName,\n  Section,\n  Img,\n  Text,\n  Title,\n  Wrap,\n} from './GeneralFilmInfo.styled';\n\nconst GeneralFilmInfo = ({ filmDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    vote_average,\n    title,\n    genres,\n  } = filmDetails;\n  const date = new Date(release_date).getFullYear();\n  return (\n    <Section>\n      <Img src={`https://image.tmdb.org/t/p/w400${poster_path}`} alt={title} />\n      <Container>\n        <MovieName>\n          {original_title} ({date})\n        </MovieName>\n        <Text>\n          <Wrap>\n            <BsTrophy size={18} />\n          </Wrap>\n          User score: {Math.round(vote_average * 10)}%\n        </Text>\n        <Title>Genres</Title>\n        {genres\n          ? genres.map(genre => {\n              return (\n                <Text key={genre.id}>\n                  <Wrap>\n                    <BiMoviePlay size={20} />\n                  </Wrap>\n                  {genre.name}\n                </Text>\n              );\n            })\n          : 'Unknown'}\n        <Title>Overview</Title>\n        <Text>{overview}</Text>\n      </Container>\n    </Section>\n  );\n};\n\nGeneralFilmInfo.propTypes = {\n  filmDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default GeneralFilmInfo;\n","import { NavLink } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\n\nconst AddInfoLink = styled(NavLink)`\n  color: ${p => p.theme.color.secondBg};\n  font-family: ${p => p.theme.font.main};\n  font-size: 25px;\n  font-weight: 500;\n  padding: 8px 16px;\n  border-radius: 4px;\n  transition: ${p => p.theme.transition};\n  display: block;\n  margin-bottom: 20px;\n\n  :hover {\n    color: ${p => p.theme.color.text};\n    background-color: ${p => p.theme.color.accent};\n  }\n\n  &.active {\n    color: ${p => p.theme.color.text};\n    background-color: ${p => p.theme.color.accent};\n  }\n`;\nconst Section = styled.section`\n  padding: 15px 0 15px 0;\n`;\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\nconst Item = styled.li``;\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 15px;\n  font-family: ${p => p.theme.font.marker};\n  font-size: 30px;\n  color: ${p => p.theme.color.secondBg};\n`;\nconst LoadingWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport { Title, AddInfoLink, Section, List, Item, LoadingWrap };\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { Comment } from 'react-loader-spinner';\n\nimport {\n  Title,\n  AddInfoLink,\n  Section,\n  List,\n  Item,\n  LoadingWrap,\n} from './AdditionalFilmInfo.styled';\n\nconst AdditionalFilmInfo = ({ location }) => {\n  const currentlocation = location.state?.from ?? '/';\n  return (\n    <Section>\n      <Title>Additional information</Title>\n      <List>\n        <Item>\n          <AddInfoLink to=\"cast\" state={{ from: currentlocation }}>\n            Cast\n          </AddInfoLink>\n        </Item>\n        <Item>\n          <AddInfoLink to=\"reviews\" state={{ from: currentlocation }}>\n            Reviews\n          </AddInfoLink>\n        </Item>\n      </List>\n      <Suspense\n        fallback={\n          <LoadingWrap>\n            <Comment backgroundColor=\"#F34A4A\" height=\"150\" width=\"150\" />\n          </LoadingWrap>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nAdditionalFilmInfo.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    key: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.object,\n  }),\n};\n\nexport default AdditionalFilmInfo;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled.main`\n  padding: 20px;\n`;\n\nconst BackLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  width: 130px;\n  color: ${p => p.theme.color.secondText};\n  background-color: ${p => p.theme.color.text};\n  text-decoration: none;\n  font-family: ${p => p.theme.font.marker};\n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  transition: ${p => p.theme.transition};\n\n  :hover {\n    background-color: ${p => p.theme.color.accent};\n    color: ${p => p.theme.color.text};\n  }\n`;\nconst Wrap = styled.span`\n  margin-right: 5px;\n  height: 20px;\n`;\nexport { BackLink, Container, Wrap };\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nimport { TbArrowBackUp } from 'react-icons/tb';\n\nimport getMovies from 'API/getMovies';\nimport GeneralFilmInfo from 'components/GeneralFilmInfo/GeneralFilmInfo';\nimport AdditionalFilmInfo from 'components/AdditionalFilmInfo/AdditionalFilmInfo';\n\nimport { BackLink, Container, Wrap } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovies(`movie/${movieId}`).then(res => setFilmDetails(res.data));\n  }, [movieId]);\n  const backHref = location.state?.from ?? '/movies';\n\n  return (\n    <Container>\n      <BackLink to={backHref}>\n        <Wrap>\n          <TbArrowBackUp size={20} />\n        </Wrap>\n        Return back\n      </BackLink>\n      <GeneralFilmInfo filmDetails={filmDetails} />\n      <AdditionalFilmInfo location={location} />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","Section","styled","Img","Container","p","theme","font","main","color","secondBg","MovieName","accent","marker","Title","Text","Wrap","filmDetails","poster_path","original_title","release_date","overview","vote_average","title","genres","date","Date","getFullYear","src","alt","size","Math","round","map","genre","name","id","AddInfoLink","NavLink","transition","text","List","Item","LoadingWrap","currentlocation","location","state","from","to","Suspense","fallback","backgroundColor","height","width","BackLink","secondText","useState","setFilmDetails","movieId","useParams","useLocation","useEffect","then","res","data","backHref"],"sourceRoot":""}