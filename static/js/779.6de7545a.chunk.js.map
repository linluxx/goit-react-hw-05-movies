{"version":3,"file":"static/js/779.6de7545a.chunk.js","mappings":"kLAEMA,EAAM,mCAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,EAAUC,GAAnC,gGAE2BC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,oBAAiCF,EAAjC,YAAwCG,IAFnE,cAEUE,EAFV,yBAIWA,GAJX,gCAMIC,QAAQC,MAAR,MANJ,gFAFAH,EAAAA,GAAAA,SAAAA,QAAyB,gCAYzB,IAZA,SAEyB,EAAVH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,6JCHTO,EAAOC,EAAAA,EAAAA,GAAH,4DACO,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,KAAKC,IAAjB,IACP,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,QAAlB,IAENC,EAAOP,EAAAA,EAAAA,GAAH,qJAEc,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,QAAlB,IAMnBE,EAAQR,EAAAA,EAAAA,GAAH,yFAKLS,EAAOT,EAAAA,EAAAA,EAAH,sB,SCyBV,EAlCgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,GAAU,UAAD,OAAWqB,EAAX,aAA8BG,MAAK,SAAAC,GAC1CL,EAAWK,EAAIC,KAAKC,QACrB,GACF,GAAE,CAACN,KAGF,SAACd,EAAD,UACGY,EAAQS,OACPT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAiBiB,KAAM,GAAIpB,MAAO,YADpC,WAEWiB,MAEX,SAACb,EAAD,UAAOc,MALEC,EAQd,KAED,UAAChB,EAAD,YACE,SAAC,MAAD,CAAYiB,KAAM,KADpB,sDAOP,C","sources":["API/getMovies.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7cc6d6f36e893764d456caf842646015';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovies(endPoint, options) {\n  try {\n    const response = await axios.get(`${endPoint}?api_key=${KEY}&${options}`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default getMovies;\n","import styled from '@emotion/styled';\n\nconst List = styled.ul`\n  font-family: ${p => p.theme.font.main};\n  color: ${p => p.theme.color.secondBg};\n`;\nconst Item = styled.li`\n  padding: 15px;\n  border: 1.5px solid ${p => p.theme.color.secondBg};\n  border-radius: 10px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nconst Title = styled.h3`\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n`;\nconst Text = styled.p``;\n\nexport { List, Item, Text, Title };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { TbMessageCircle } from 'react-icons/tb';\nimport { TfiFaceSad } from 'react-icons/tfi';\n\nimport getMovies from 'API/getMovies';\n\nimport { List, Item, Text, Title } from '../Reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovies(`/movie/${movieId}/reviews`).then(res => {\n      setReviews(res.data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <List>\n      {reviews.length ? (\n        reviews.map(({ author, content, id }) => {\n          return (\n            <Item key={id}>\n              <Title>\n                <TbMessageCircle size={20} color={'#615049'} />\n                Author: {author}\n              </Title>\n              <Text>{content}</Text>\n            </Item>\n          );\n        })\n      ) : (\n        <Title>\n          <TfiFaceSad size={20} />\n          Sorry, we don't have any reviews for this movie\n        </Title>\n      )}\n    </List>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getMovies","endPoint","options","axios","response","console","error","List","styled","p","theme","font","main","color","secondBg","Item","Title","Text","useState","reviews","setReviews","movieId","useParams","useEffect","then","res","data","results","length","map","author","content","id","size"],"sourceRoot":""}